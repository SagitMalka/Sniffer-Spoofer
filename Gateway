#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>

#define BUFSIZE 1024
#define PORT 9998

int main(int argc, char *argv[]) {
    int sockfd;
    struct sockaddr_in serv_addr;
    char buffer[BUFSIZE];
    int message;
    float rand_num;

    if (argc != 2) {
        fprintf(stderr, "Usage: %s <hostname>\n", argv[0]);
        exit(1);
    }

    struct hostent *server = gethostbyname(argv[1]);
    if (server == NULL) {
        fprintf(stderr, "Error: no such host\n");
        exit(1);
    }

    sockfd = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);
    if (sockfd < 0) {
        perror("Error opening socket");
        exit(1);
    }

    memset((char *) &serv_addr, 0, sizeof(serv_addr));
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(PORT + 1);
    memcpy((char *) &serv_addr.sin_addr.s_addr, (char *) server->h_addr, server->h_length);

    while (1) {
        memset(buffer, 0, BUFSIZE);
        message = recvfrom(sockfd, buffer, BUFSIZE, 0, NULL, NULL);
        printf("message: ", &buffer);
        if (message < 0) {
            perror("Error receiving datagram");
            exit(1);
        }

        rand_num = ((float )random()/(float)RAND_MAX);
        if (rand_num > 0.5) {
            message = sendto(sockfd, buffer, strlen(buffer), 0, (struct sockaddr *) &serv_addr, sizeof(serv_addr));
            printf("message sent\n");
            if (message < 0) {
                perror("Error forwarding datagram");
                exit(1);
            }
        }
    }

    return 0;
}
